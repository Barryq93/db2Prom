name: Build and Download Unix Executable

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v5  # Updated to v5
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest PyInstaller
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Build executable with PyInstaller
      run: |
        pyinstaller --onefile app.py
        # List directory contents to confirm the executable location
        ls -la dist
        ls -la

    - name: Upload artifact
      uses: actions/upload-artifact@v4  # Updated to v4
      with:
        name: db2prom-executable
        path: dist/app  # Update this path to point to the executable created by PyInstaller

  download:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download artifact
      uses: actions/download-artifact@v4  # Updated to v4
      with:
        name: db2prom-executable
        path: dist  # Download the artifact to the `dist` directory

    - name: List downloaded artifact contents
      run: |
        ls -la
        ls -la dist